{"ast":null,"code":"var _jsxFileName = \"/Users/michael/Desktop/code-immersives-true/patrito-mdt-frontend-hooks/src/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\nconst initialState = {\n  user: null\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN\":\n      return {\n        user: {\n          email: action.user.email,\n          username: action.user.username,\n          isAuth: true\n        }\n      };\n\n    case \"LOG_OUT\":\n      return {\n        user: null\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction AuthContextWrapper({\n  children\n}) {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthContextWrapper, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthContextWrapper;\nexport default AuthContextWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextWrapper\");","map":{"version":3,"sources":["/Users/michael/Desktop/code-immersives-true/patrito-mdt-frontend-hooks/src/context/AuthContext.js"],"names":["createContext","useReducer","AuthContext","initialState","user","reducer","state","action","type","email","username","isAuth","AuthContextWrapper","children","dispatch"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;;AAEA,OAAO,MAAMC,WAAW,gBAAGF,aAAa,CAAC,EAAD,CAAjC;AAEP,MAAMG,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AADa,CAArB;;AAIA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AACE,aAAO;AACLJ,QAAAA,IAAI,EAAE;AACJK,UAAAA,KAAK,EAAEF,MAAM,CAACH,IAAP,CAAYK,KADf;AAEJC,UAAAA,QAAQ,EAAEH,MAAM,CAACH,IAAP,CAAYM,QAFlB;AAGJC,UAAAA,MAAM,EAAE;AAHJ;AADD,OAAP;;AAOF,SAAK,SAAL;AACE,aAAO;AACLP,QAAAA,IAAI,EAAE;AADD,OAAP;;AAGF;AACE,aAAOE,KAAP;AAdJ;AAgBD;;AAED,SAASM,kBAAT,CAA4B;AAAEC,EAAAA;AAAF,CAA5B,EAA0C;AAAA;;AACxC,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBb,UAAU,CAACI,OAAD,EAAUF,YAAV,CAApC;AACA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAF;AAASQ,MAAAA;AAAT,KAA7B;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAPQD,kB;;KAAAA,kB;AAST,eAAeA,kBAAf","sourcesContent":["import { createContext, useReducer } from \"react\";\n\nexport const AuthContext = createContext({});\n\nconst initialState = {\n  user: null,\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"LOGIN\":\n      return {\n        user: {\n          email: action.user.email,\n          username: action.user.username,\n          isAuth: true,\n        },\n      };\n    case \"LOG_OUT\":\n      return {\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n\nfunction AuthContextWrapper({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <AuthContext.Provider value={{ state, dispatch }}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\nexport default AuthContextWrapper;\n"]},"metadata":{},"sourceType":"module"}