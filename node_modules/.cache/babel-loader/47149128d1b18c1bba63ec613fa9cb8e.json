{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport Cookie from \"js-cookie\";\nimport jwtDecode from \"jwt-decode\";\nimport { AuthContext } from \"../../context/AuthContext\";\n\nfunction CheckAuthCookie() {\n  _s();\n\n  const {\n    dispatch\n  } = useContext(AuthContext);\n\n  function checkIfCookieExists() {\n    const cookie = Cookie.get(\"jwt-cookie\");\n\n    if (cookie) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  function logUserIn() {\n    let checkCookieExists = checkIfCookieExists();\n\n    if (checkCookieExists) {\n      const cookie = Cookie.get(\"jwt-cookie\");\n      const jwtDecodedToken = jwtDecode(cookie);\n      dispatch({\n        type: \"LOGIN\",\n        user: {\n          email: jwtDecodedToken.email,\n          username: jwtDecodedToken.username\n        }\n      });\n    }\n  }\n\n  return {\n    checkIfCookieExists,\n    logUserIn\n  };\n}\n\n_s(CheckAuthCookie, \"iJOrlJzf5QkpWBzuMg5OfL2WCzY=\");\n\n_c = CheckAuthCookie;\nexport default CheckAuthCookie;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckAuthCookie\");","map":{"version":3,"sources":["/Users/michael/Desktop/code-immersives-true/patrito-mdt-frontend-hooks/src/components/hooks/checkAuthCookie.js"],"names":["useContext","Cookie","jwtDecode","AuthContext","CheckAuthCookie","dispatch","checkIfCookieExists","cookie","get","logUserIn","checkCookieExists","jwtDecodedToken","type","user","email","username"],"mappings":";;AAAA,SACIA,UADJ,QAEO,OAFP;AAGA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SACIC,WADJ,QAEO,2BAFP;;AAIA,SAASC,eAAT,GAA2B;AAAA;;AACvB,QAAM;AACFC,IAAAA;AADE,MAEFL,UAAU,CAACG,WAAD,CAFd;;AAIA,WAASG,mBAAT,GAA+B;AAC3B,UAAMC,MAAM,GAAGN,MAAM,CAACO,GAAP,CAAW,YAAX,CAAf;;AAEA,QAAID,MAAJ,EAAY;AACR,aAAO,IAAP;AACH,KAFD,MAEO;AACH,aAAO,KAAP;AACH;AACJ;;AAED,WAASE,SAAT,GAAqB;AACjB,QAAIC,iBAAiB,GAAGJ,mBAAmB,EAA3C;;AAEA,QAAII,iBAAJ,EAAuB;AACnB,YAAMH,MAAM,GAAGN,MAAM,CAACO,GAAP,CAAW,YAAX,CAAf;AACA,YAAMG,eAAe,GAAGT,SAAS,CAACK,MAAD,CAAjC;AAEAF,MAAAA,QAAQ,CAAC;AACLO,QAAAA,IAAI,EAAE,OADD;AAELC,QAAAA,IAAI,EAAE;AACFC,UAAAA,KAAK,EAAEH,eAAe,CAACG,KADrB;AAEFC,UAAAA,QAAQ,EAAEJ,eAAe,CAACI;AAFxB;AAFD,OAAD,CAAR;AAOH;AACJ;;AAED,SAAO;AACHT,IAAAA,mBADG;AAEHG,IAAAA;AAFG,GAAP;AAIH;;GApCQL,e;;KAAAA,e;AAsCT,eAAeA,eAAf","sourcesContent":["import {\n    useContext\n} from \"react\";\nimport Cookie from \"js-cookie\";\nimport jwtDecode from \"jwt-decode\";\n\nimport {\n    AuthContext\n} from \"../../context/AuthContext\";\n\nfunction CheckAuthCookie() {\n    const {\n        dispatch\n    } = useContext(AuthContext);\n\n    function checkIfCookieExists() {\n        const cookie = Cookie.get(\"jwt-cookie\");\n\n        if (cookie) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    function logUserIn() {\n        let checkCookieExists = checkIfCookieExists();\n\n        if (checkCookieExists) {\n            const cookie = Cookie.get(\"jwt-cookie\");\n            const jwtDecodedToken = jwtDecode(cookie);\n\n            dispatch({\n                type: \"LOGIN\",\n                user: {\n                    email: jwtDecodedToken.email,\n                    username: jwtDecodedToken.username,\n                },\n            });\n        }\n    }\n\n    return {\n        checkIfCookieExists,\n        logUserIn,\n    };\n}\n\nexport default CheckAuthCookie;"]},"metadata":{},"sourceType":"module"}